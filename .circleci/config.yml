version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:12.14.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install && npm install --prefix=$HOME/.local --global gulp
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build project
          command: npm run build
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - node_modules/*
            - dist/*
  lint:
    docker:
      - image: cimg/node:12.14.1
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Code linting
          command: npm run lint
  test:
    docker:
      - image: cimg/node:12.14.1
      - image: mongo:5.0
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Automated tests
          command: npm run test
  analyze:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    steps:
      - checkout
      - run:
          name: Get GitHub PullRequest Number
          command: >-
            if [[ -z "$CIRCLE_PR_NUMBER" ]]; then
                if [[ -z "$CI_PULL_REQUEST" ]]; then
                    URL="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls?head=$CIRCLE_PROJECT_USERNAME:$CIRCLE_BRANCH"
                    RESULT="`curl -X GET -u $GITHUB_ACCESS_TOKEN:x-oauth-basic $URL | jq ".[0].url"`"
                    [[ "$RESULT" == 'null' ]] && CI_PULL_REQUEST='' || CI_PULL_REQUEST="${RESULT//\"}"
                fi
                CIRCLE_PR_NUMBER="$(basename "$CI_PULL_REQUEST")"
            fi

            echo 'export CIRCLE_PR_NUMBER=$CIRCLE_PR_NUMBER' >> $BASH_ENV
      - run:
          name: SonarQube - PullRequest Scan
          command: >-
            sonar-scanner
            -X
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.host.url=$SONAR_HOST_URL
            -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST##*/}
            -Dsonar.pullrequest.branch=$CIRCLE_BRANCH
            -Dsonar.pullrequest.base=main
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.projectVersion=$CIRCLE_SHA1
  analyze_branch:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    steps:
      - checkout
      - run:
          name: SonarQube - Push Scan
          command: >-
            sonar-scanner
            -X
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.host.url=$SONAR_HOST_URL
            -Dsonar.branch.name=main

workflows:
  version: 2
  app:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - analyze:
          requires:
            - build
          filters:
            branches:
              ignore:
                - develop
                - master
                - main
      - analyze_branch:
          requires:
            - build
          filters:
            branches:
              only:
                - main
